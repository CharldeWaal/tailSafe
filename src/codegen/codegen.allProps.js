// eslint-disable-next-line @typescript-eslint/no-require-imports
const fs = require('fs');
// eslint-disable-next-line @typescript-eslint/no-require-imports
const { paths } = require('../config/codegen.config');
// eslint-disable-next-line @typescript-eslint/no-require-imports
const tailSafeConfig = require('../config/tailSafe.config.ts').default;

const groupsFilePath = paths.generated.groups;
const outputFilePath = paths.generated.allProps;

const groupsFileContent = fs.readFileSync(groupsFilePath, 'utf-8');

// This regex finds all property keys within the generated `...Props` interfaces.
const propRegex = /\s*'?([\w-]+)'?\??:/gm;

const allProps = new Set();
let match;
while ((match = propRegex.exec(groupsFileContent))) {
    allProps.add(match[1]);
}

// Ensure alias props from the config are included.
Object.keys(tailSafeConfig.aliases).forEach(prop => allProps.add(prop));

const allPropKeys = Array.from(allProps).sort();

const outputContent = `// AUTO-GENERATED FILE. DO NOT EDIT.
// Generated by tailSafe ðŸ¦ˆ
// It contains a list of all possible props that can be passed to TailSafe components.
// This list is used to filter out non-DOM props before passing them to the underlying element.

export const allTailSafeProps: string[] = ${JSON.stringify(allPropKeys, null, 2)};
`;

fs.writeFileSync(outputFilePath, outputContent);

// eslint-disable-next-line no-console
console.log(`âœ… Generated list of all props containing ${allPropKeys.length} props, written to`, outputFilePath);
// eslint-disable-next-line no-console
console.log(`ðŸ¦ˆ Codegen success!`);